
$critical_update="${critical_update}"
$Definition_Updates="${definition_updates}"
$Feature_Packs="${feature_packs}"
$Security_Updates="${security_updates}"
$Service_Packs="${service_packs}"
$Update_Rollups="${update_rollups}"
$Updates="${updates}"
$Drivers="${drivers}"
$Drivers_sets="${driver_sets}"
$Tools="${tools}"
$Upgrades="${upgrades}"
$language="${language}"
$enabled_products="${enabled_products}"
$disabled_products="${disabled_products}"
$targetingMode="${targeting_mode}"

Set-TimeZone -Id "${timezone}"

if (-not((Get-WindowsFeature -name UpdateServices).installstate -eq "Installed")){

Install-WindowsFeature -Name UpdateServices -IncludeManagementTools
New-Item -Path D: -Name WSUS -ItemType Directory
CD "C:\Program Files\Update Services\Tools"
.\wsusutil.exe postinstall CONTENT_DIR=D:\WSUS

Write-Verbose "Get WSUS Server Object" -Verbose
$wsus = Get-WSUSServer

Write-Verbose "Connect to WSUS server configuration" -Verbose
$wsusConfig = $wsus.GetConfiguration()

Write-Verbose "Set to download updates from Microsoft Updates" -Verbose
Set-WsusServerSynchronization -SyncFromMU

Write-Verbose "Set Update Languages and save configuration settings" -Verbose
$wsusConfig.AllUpdateLanguagesEnabled = $false           
$wsusConfig.SetEnabledUpdateLanguages("$language")
$wsusConfig.DownloadUpdateBinariesAsNeeded=$false

Write-Verbose "Set whether to use GPO or manually move categories"
$wsusConfig.TargetingMode = "$targetingMode"
$wsusConfig.Save()

Write-Verbose "Get WSUS Subscription and perform initial synchronization to get latest categories" -Verbose
$subscription = $wsus.GetSubscription()
$subscription.StartSynchronizationForCategoryOnly()

	While ($subscription.GetSynchronizationStatus() -ne 'NotProcessing') {
		Write-Host "." -NoNewline
		Start-Sleep -Seconds 5
	}

Write-Verbose "Sync is Done" -Verbose

Write-Verbose "Disable All Products" -Verbose
Get-WsusServer | Get-WsusProduct | Where-Object -FilterScript { $_.product.title -like "*" } | Set-WsusProduct -Disable

Write-Verbose "Enable Selected Products" -Verbose

foreach ($enabled_product in ($enabled_products.Split(",")).trim()){
Get-WsusServer | Get-WsusProduct | Where-Object -FilterScript { $_.product.title -like "$enabled_product" } | Set-WsusProduct
}

Write-Verbose "Disable Selected Packs" -Verbose

foreach ($disabled_product in ($disabled_products.Split(",")).trim()){
Get-WsusServer | Get-WsusProduct | Where-Object -FilterScript { $_.product.title -like "$disabled_product" } | Set-WsusProduct -disable
}

Write-Verbose "Configure the Classifications" -Verbose

$classification=""
if ($Critical_Update -eq "1" ){$classification+="Critical Updates,"}
if ($Definition_Updates -eq "1" ){$classification+="Definition Updates,"}
if ($Feature_Packs -eq "1" ){$classification+="Feature Packs,"}
if ($Security_Updates -eq "1" ){$classification+="Security Updates,"}
if ($Service_Packs -eq "1" ){$classification+="Service Packs,"}
if ($Update_Rollups -eq "1" ){$classification+="Update Rollups,"}
if ($Updates -eq "1" ){$classification+="Updates,"}
if ($Drivers -eq "1" ){$classification+="Drivers,"}
if ($Drivers_sets -eq "1" ){$classification+="Drivers Sets,"}
if ($Tools -eq "1" ){$classification+="Tools,"}
if ($Upgrades -eq "1" ){$classification+="Upgrades,"}

$len=$classification.Length

$classification= $classification.Substring(0, $len-1)
$class_array=$classification.split(",")

Get-WsusClassification | Set-WsusClassification -Disable

Get-WsusClassification | Where-Object {
    $_.Classification.Title -in $class_array
    } | Set-WsusClassification

$subscription.SynchronizeAutomatically=$true

$subscription.SynchronizeAutomaticallyTimeOfDay= (New-TimeSpan -Hours 0)
$subscription.NumberOfSynchronizationsPerDay=1
$subscription.Save()

$subscription.StartSynchronization()
}
