kind: ZarfPackageConfig
metadata:
  name: "terraform"
  description: "Run terraform/terragrunt code"

variables:
  - name: REGION
    description: "target AWS region"
    default: "us-east-2"
  - name: REGION2
    description: "RDS backup target AWS region"
    default: "us-east-1"
  - name: ACCOUNT
    description: "target AWS account"
    prompt: true
  - name: AWS_PROFILE
    description: "local AWS profile to be used for deployment"
    prompt: true
  - name: AWS_ADMIN_USERNAMES
    description: "AWS username for admin, ex. Bob.Marley, ENTER AS A LIST ex [\"Bob.Marley\",\"Jane.Doe\"]"
    prompt: true
  - name: VPC_CIDR
    default: "10.200.0.0/16"
  - name: VPC_NAME
    default: "my-vpc"
  - name: CLUSTER_NAME
    default: "my-eks"
  - name: CLUSTER_VERSION
    default: "1.24"
  - name: BASTION_NAME
    default: "my-bastion"
  - name: BASTION_SSH_USER
    description: "Bastion user for ssh"
    default: "ec2-user"
  - name: BASTION_SSH_PASSWORD
    description: "Bastion password for ssh"
    prompt: true
  # - name: BASTION_AMI_ID
  #   default: "ami-000d4884381edb14c"
  - name: KEYCLOAK_ENABLED
    default: "true"
  - name: KEYCLOAK_DB_PASSWORD
    description: "User provided password for keycloak DB"
    prompt: true
  - name: KC_DB_ENGINE_VERSION
    default: "14.1"
  - name: KC_DB_FAMILY
    default: "postgres14"
  - name: KC_DB_MAJOR_ENGINE_VERSION
    default: "14"
  - name: KC_DB_ALLOCATED_STORAGE
    default: 20
  - name: KC_DB_MAX_ALLOCATED_STORAGE
    default: 100
  - name: KC_DB_INSTANCE_CLASS
    default: "db.t4g.large"
    # used in bastion userdata to download zarf binary
  - name: ZARF_VERSION
    default: "v0.24.2"

components:
  - name: download-dependencies
    required: true
    actions:
      onDeploy:
        defaults:
          maxTotalSeconds: 300
          maxRetries: 3
        after:
          - cmd: "rm -f terraform"
          - cmd: "./zarf tools archiver decompress tmp/terraform_###ZARF_PKG_VAR_TF_VERSION###_###ZARF_PKG_VAR_ARCH_NAME###_###ZARF_PKG_VAR_ARCH_PROC###.zip ."
          # - "./zarf tools archiver decompress tmp/awscliv2.zip ."
          # - "rm -rf tmp/"
    files:
      # terraform binary into zarf package
      - source: https://releases.hashicorp.com/terraform/###ZARF_PKG_VAR_TF_VERSION###/terraform_###ZARF_PKG_VAR_TF_VERSION###_###ZARF_PKG_VAR_ARCH_NAME###_###ZARF_PKG_VAR_ARCH_PROC###.zip
        target: tmp/terraform_###ZARF_PKG_VAR_TF_VERSION###_###ZARF_PKG_VAR_ARCH_NAME###_###ZARF_PKG_VAR_ARCH_PROC###.zip
      # aws cli binary
      # - source: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      #   target: tmp/awscliv2.zip


  - name: terraform-init
    description: Terraform init using zarf actions
    actions:
      onCreate:
        defaults:
          maxTotalSeconds: 300
          maxRetries: 3
        before:
            #just used to build the .terraform folder and modules for airgapping
          - cmd: "terraform init -backend=false"
            dir: "###ZARF_PKG_VAR_TF_ENV_DIR###"
            #just used to build the .terraform folder and modules for airgapping
          - cmd: "terraform init -backend=false"
            dir: "###ZARF_PKG_VAR_TF_ENV_STATE_DIR###"
    files:
      - source: "###ZARF_PKG_VAR_TF_ENV_DIR###"
        target: "tmp/examples/###ZARF_PKG_VAR_TF_ENV###"
      - source: "###ZARF_PKG_VAR_TF_ENV_STATE_DIR###"
        target: "tmp/examples/###ZARF_PKG_VAR_TF_ENV_STATE###"
      - source: "###ZARF_PKG_VAR_TF_MODULES_DIR###"
        target: "tmp/modules"

  # one-time backend configuraion module for s3
  - name: terraform-s3-bucket
    actions:
      onDeploy:
        defaults:
          maxTotalSeconds: 300
          maxRetries: 3
          dir: "tmp/examples/###ZARF_PKG_VAR_TF_ENV_STATE###"
        before:
          - cmd: "terraform apply -auto-approve"
          - cmd: "terraform output -raw tfstate_bucket_id"
            setVariable: BUCKET_ID
          - cmd: "terraform output -raw tfstate_dynamodb_table_name"
            setVariable: DYNAMODB_TABLE_NAME
          - cmd: terraform init -migrate-state -force-copy -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV_STATE###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"

  - name: terraform-apply-vpc-bastion
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
          - cmd: "terraform apply -target=module.vpc -target=module.bastion -auto-approve"
          - cmd: "terraform output bastion_instance_id"
          # - cmd: "terraform output -raw bastion_private_key"
          - cmd: echo "update your sshuttle info"
          - cmd: echo "Allow the bastion up to 5 minutes to completely initialize"

  - name: terraform-set-state-vars
    actions:
      required: true
      onDeploy:
        defaults:
          maxTotalSeconds: 300
          maxRetries: 3
          dir: "tmp/examples/###ZARF_PKG_VAR_TF_ENV_STATE###"
        before:
          - cmd: "terraform output -raw tfstate_bucket_id"
            setVariable: BUCKET_ID
          - cmd: "terraform output -raw tfstate_dynamodb_table_name"
            setVariable: DYNAMODB_TABLE_NAME
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
            dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###

  - name: terraform-apply-eks
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: "terraform apply -target=module.eks -auto-approve"

  - name: terraform-apply-bigbang-dependencies
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
          - cmd: "terraform apply -target=module.flux_sops -target=module.loki_s3_bucket -target=module.rds_postgres_keycloak -auto-approve"

  - name: terraform-destroy-bigbang-dependencies
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
          - cmd: "terraform apply -destroy -target=module.rds_postgres_keycloak -target=module.loki_s3_bucket -target=module.flux_sops -auto-approve"

  - name: terraform-destroy-eks
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
          - cmd: "terraform apply -destroy -target=module.eks -auto-approve"

  - name: terraform-destroy-vpc-bastion
    actions:
      onDeploy:
        defaults:
          maxRetries: 3
          dir: tmp/examples/###ZARF_PKG_VAR_TF_ENV###
        before:
          - cmd: terraform init -backend-config="bucket=$ZARF_VAR_BUCKET_ID" -backend-config="key=###ZARF_PKG_VAR_TF_ENV###/terraform.tfstate" -backend-config="dynamodb_table=$ZARF_VAR_DYNAMODB_TABLE_NAME" -backend-config="region=$ZARF_VAR_REGION"
          - cmd: "terraform apply -destroy -auto-approve"
