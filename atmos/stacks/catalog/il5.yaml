components:
  terraform:
    init:
      metatdata:
        component: init
      vars: {}
    vpc:
      metadata:
        component: vpc
      providers:
        context:
          values:
            deploy_id: '{{ (atmos.Component "init" .stack).outputs.deploy_id }}'
            permissions_boundary_policy_arn: '{{ (atmos.Component "init" .stack).outputs.permissions_boundary_policy_arn }}'
            permissions_boundary_policy_name: '{{ (atmos.Component "init" .stack).outputs.permissions_boundary_policy_name }}'
      vars:
        required_vpc_vars:
          azs: '{{ ((atmos.Component "init" .stack).outputs.azs) | toJson }}'
          vpc_cidr: "10.200.0.0/16"
          secondary_cidr_blocks:
            - "100.64.0.0/16"
          vpc_subnets:
            - name: "public-a"
              new_bits: 6
            - name: "public-b"
              new_bits: 6
            - name: "public-c"
              new_bits: 6
            - name: "private-a"
              new_bits: 6
            - name: "private-b"
              new_bits: 6
            - name: "private-c"
              new_bits: 6
            - name: "database-a"
              new_bits: 11
            - name: "database-b"
              new_bits: 11
            - name: "database-c"
              new_bits: 11
        optional_vpc_vars:
          create_default_vpc_endpoints: false
          instance_tenancy: default

    bastion:
      metadata:
        component: bastion
      providers:
        context:
          values:
            deploy_id: '{{ (atmos.Component "init" .stack).outputs.deploy_id }}'
      vars:
        bastion_required_var1: '{{ (atmos.Component "vpc" .stack).outputs.vpc_required_out1 }}'
        bastion_required_var2: '{{ (atmos.Component "vpc" .stack).outputs.vpc_required_out2 }}'
        bastion_sensitive_required_var1: "bastion-secret-one"
        bastion_sensitive_config_opts:
          bastion_sensitive_opt1: baz
        bastion_config_opts:
          default_ami_id: '{{ (index ((atmos.Component "init" .stack).outputs.amis) "bastion").id }}'
    eks:
      metadata:
        component: eks
      providers:
        context:
          values:
            deploy_id: '{{ (atmos.Component "init" .stack).outputs.deploy_id }}'
            permissions_boundary_policy_arn: '{{ (atmos.Component "init" .stack).outputs.permissions_boundary_policy_arn }}'
            permissions_boundary_policy_name: '{{ (atmos.Component "init" .stack).outputs.permissions_boundary_policy_name }}'
      vars:
        vpc_config: '{{ toRawJson ((atmos.Component "vpc" .stack).outputs.vpc_config) }}'
        eks_config_opts:
          default_ami_id: '{{ (index ((atmos.Component "init" .stack).outputs.amis) "eks-cpu").id }}'
          cluster_version: "1.29"
        eks_sensitive_config_opts: {}
